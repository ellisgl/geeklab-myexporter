{% extends "Wrapper.html.twig" %}
{% block styles %}
{% endblock %}
{% block content %}
    <main>
        <div class="container bg-dark text-white">
            <header class="d-flex flex-wrap justify-content-center py-3 mb-4">
                <form class="d-flex mb-3 mb-md-0 me-md-auto col-4">
                    <select class="form-select" id="database" aria-label="Database Selector">
                        <option value="" selected>Open this select menu</option>
                        {% for database in databases %}
                            <option id="{{ database }}">{{ database }}</option>
                        {% endfor %}
                    </select>
                </form>
                <div class="text-end">
                    <button type="button" class="btn btn-warning">Logout</button>
                </div>
            </header>
        </div>
        <div class="container">
            <table id="table-table" class="sortable table">
                <thead>
                    <tr>
                        <th scope="col" class="text-start">Table Name</th>
                        <th scope="col" class="size-col">Size</th>
                        <th scope="col" class="checkbox-col no-sort">Schema</th>
                        <th scope="col" class="checkbox-col no-sort">Data</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>a</td>
                        <td>b</td>
                        <td>c</td>
                        <td>d</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </main>
{% endblock %}
{% block js %}
    <script src="/assets/sortable/sortable.min.js"></script>
    <script>
        const databaseSelect = document.getElementById('database');
        const tableBody = document.getElementById('table-table').getElementsByTagName('tbody')[0];

        function clearRows(tableBody) {
            tableBody.innerHTML = '';
        }

        function createRow(tableBody, tableData) {
            const row = tableBody.insertRow();
            const random = Math.floor(Math.random() * 999);
            const tableNameCell = row.insertCell();
            tableNameCell.innerHTML = `Table Name here ${i}`;

            const tableSizeCell = row.insertCell();
            tableSizeCell.setAttribute('data-sort', `${random}`);
            tableSizeCell.innerHTML = `${random}M`;

            const schemaCell = row.insertCell();
            schemaCell.innerHTML = `<input class="form-check-input" type="checkbox" name="schema['table1']" value="1" title="table${i} schema">`;

            const dataCell = row.insertCell();
            schemaCell.innerHTML = `<input class="form-check-input" type="checkbox" name="data['table1']" value="1" title="table${i} data">`;
        }

        databaseSelect.addEventListener('change', () => {
            console.log(databaseSelect.value);
            const val = databaseSelect.value;
            clearRows(tableBody);

            if (val !== '') {
                fetch(`/db/${val}`)
                    .then((res) => {
                        console.log({res: res});
                    })
            }
        });
    </script>
{% endblock %}
